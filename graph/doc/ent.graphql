directive @goField(forceResolver: Boolean, name: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!]) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
type App implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  """应用名称"""
  name: String
  """应用类型"""
  kind: AppKind!
  """回调地址"""
  redirectURI: String
  """应用ID"""
  appKey: String
  """应用密钥"""
  appSecret: String
  """权限范围"""
  scopes: String
  """token有效期"""
  tokenValidity: Int
  """refresh_token有效期"""
  refreshTokenValidity: Int
  """图标"""
  logo: String
  """备注"""
  comments: String
  """状态"""
  status: AppStatus
  menus(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for AppMenus returned from the connection."""
    orderBy: AppMenuOrder

    """Filtering options for AppMenus returned from the connection."""
    where: AppMenuWhereInput
  ): AppMenuConnection!
  permissions(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for AppPermissions returned from the connection."""
    orderBy: AppPermissionOrder

    """Filtering options for AppPermissions returned from the connection."""
    where: AppPermissionWhereInput
  ): AppPermissionConnection!
}
"""A connection to a list of items."""
type AppConnection {
  """A list of edges."""
  edges: [AppEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type AppEdge {
  """The item at the end of the edge."""
  node: App
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""AppKind is enum for the field kind"""
enum AppKind @goModel(model: "github.com/woocoos/adminx/ent/app.Kind") {
  web
  native
  server
}
type AppMenu implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  """所属应用"""
  appID: ID!
  """父级ID"""
  parentID: Int!
  """目录,菜单项"""
  kind: AppMenuKind!
  """菜单名称"""
  name: String
  """权限ID"""
  permissionID: ID
  """备注"""
  comments: String
  displaySort: Int
  app: App!
  permission: AppPermission
}
"""A connection to a list of items."""
type AppMenuConnection {
  """A list of edges."""
  edges: [AppMenuEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type AppMenuEdge {
  """The item at the end of the edge."""
  node: AppMenu
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""AppMenuKind is enum for the field kind"""
enum AppMenuKind @goModel(model: "github.com/woocoos/adminx/ent/appmenu.Kind") {
  dir
  menu
}
"""Ordering options for AppMenu connections"""
input AppMenuOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order AppMenus."""
  field: AppMenuOrderField!
}
"""Properties by which AppMenu connections can be ordered."""
enum AppMenuOrderField {
  createdAt
}
"""
AppMenuWhereInput is used for filtering AppMenu objects.
Input was generated by ent.
"""
input AppMenuWhereInput {
  not: AppMenuWhereInput
  and: [AppMenuWhereInput!]
  or: [AppMenuWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """app_id field predicates"""
  appID: ID
  appIDNEQ: ID
  appIDIn: [ID!]
  appIDNotIn: [ID!]
  """parent_id field predicates"""
  parentID: Int
  parentIDNEQ: Int
  parentIDIn: [Int!]
  parentIDNotIn: [Int!]
  parentIDGT: Int
  parentIDGTE: Int
  parentIDLT: Int
  parentIDLTE: Int
  """kind field predicates"""
  kind: AppMenuKind
  kindNEQ: AppMenuKind
  kindIn: [AppMenuKind!]
  kindNotIn: [AppMenuKind!]
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """permission_id field predicates"""
  permissionID: ID
  permissionIDNEQ: ID
  permissionIDIn: [ID!]
  permissionIDNotIn: [ID!]
  permissionIDIsNil: Boolean
  permissionIDNotNil: Boolean
  """app edge predicates"""
  hasApp: Boolean
  hasAppWith: [AppWhereInput!]
  """permission edge predicates"""
  hasPermission: Boolean
  hasPermissionWith: [AppPermissionWhereInput!]
}
"""Ordering options for App connections"""
input AppOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Apps."""
  field: AppOrderField!
}
"""Properties by which App connections can be ordered."""
enum AppOrderField {
  createdAt
}
type AppPermission implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  """所属应用"""
  appID: ID!
  """名称"""
  name: String
  """备注"""
  comments: String
  app: App!
  menus: [AppMenu!]
}
"""A connection to a list of items."""
type AppPermissionConnection {
  """A list of edges."""
  edges: [AppPermissionEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type AppPermissionEdge {
  """The item at the end of the edge."""
  node: AppPermission
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for AppPermission connections"""
input AppPermissionOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order AppPermissions."""
  field: AppPermissionOrderField!
}
"""Properties by which AppPermission connections can be ordered."""
enum AppPermissionOrderField {
  createdAt
}
"""
AppPermissionWhereInput is used for filtering AppPermission objects.
Input was generated by ent.
"""
input AppPermissionWhereInput {
  not: AppPermissionWhereInput
  and: [AppPermissionWhereInput!]
  or: [AppPermissionWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """app_id field predicates"""
  appID: ID
  appIDNEQ: ID
  appIDIn: [ID!]
  appIDNotIn: [ID!]
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """app edge predicates"""
  hasApp: Boolean
  hasAppWith: [AppWhereInput!]
  """menus edge predicates"""
  hasMenus: Boolean
  hasMenusWith: [AppMenuWhereInput!]
}
"""AppStatus is enum for the field status"""
enum AppStatus @goModel(model: "github.com/woocoos/adminx/ent/app.Status") {
  active
  inactive
}
"""
AppWhereInput is used for filtering App objects.
Input was generated by ent.
"""
input AppWhereInput {
  not: AppWhereInput
  and: [AppWhereInput!]
  or: [AppWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """kind field predicates"""
  kind: AppKind
  kindNEQ: AppKind
  kindIn: [AppKind!]
  kindNotIn: [AppKind!]
  """redirect_uri field predicates"""
  redirectURI: String
  redirectURINEQ: String
  redirectURIIn: [String!]
  redirectURINotIn: [String!]
  redirectURIGT: String
  redirectURIGTE: String
  redirectURILT: String
  redirectURILTE: String
  redirectURIContains: String
  redirectURIHasPrefix: String
  redirectURIHasSuffix: String
  redirectURIIsNil: Boolean
  redirectURINotNil: Boolean
  redirectURIEqualFold: String
  redirectURIContainsFold: String
  """app_key field predicates"""
  appKey: String
  appKeyNEQ: String
  appKeyIn: [String!]
  appKeyNotIn: [String!]
  appKeyGT: String
  appKeyGTE: String
  appKeyLT: String
  appKeyLTE: String
  appKeyContains: String
  appKeyHasPrefix: String
  appKeyHasSuffix: String
  appKeyIsNil: Boolean
  appKeyNotNil: Boolean
  appKeyEqualFold: String
  appKeyContainsFold: String
  """app_secret field predicates"""
  appSecret: String
  appSecretNEQ: String
  appSecretIn: [String!]
  appSecretNotIn: [String!]
  appSecretGT: String
  appSecretGTE: String
  appSecretLT: String
  appSecretLTE: String
  appSecretContains: String
  appSecretHasPrefix: String
  appSecretHasSuffix: String
  appSecretIsNil: Boolean
  appSecretNotNil: Boolean
  appSecretEqualFold: String
  appSecretContainsFold: String
  """scopes field predicates"""
  scopes: String
  scopesNEQ: String
  scopesIn: [String!]
  scopesNotIn: [String!]
  scopesGT: String
  scopesGTE: String
  scopesLT: String
  scopesLTE: String
  scopesContains: String
  scopesHasPrefix: String
  scopesHasSuffix: String
  scopesIsNil: Boolean
  scopesNotNil: Boolean
  scopesEqualFold: String
  scopesContainsFold: String
  """token_validity field predicates"""
  tokenValidity: Int
  tokenValidityNEQ: Int
  tokenValidityIn: [Int!]
  tokenValidityNotIn: [Int!]
  tokenValidityGT: Int
  tokenValidityGTE: Int
  tokenValidityLT: Int
  tokenValidityLTE: Int
  tokenValidityIsNil: Boolean
  tokenValidityNotNil: Boolean
  """refresh_token_validity field predicates"""
  refreshTokenValidity: Int
  refreshTokenValidityNEQ: Int
  refreshTokenValidityIn: [Int!]
  refreshTokenValidityNotIn: [Int!]
  refreshTokenValidityGT: Int
  refreshTokenValidityGTE: Int
  refreshTokenValidityLT: Int
  refreshTokenValidityLTE: Int
  refreshTokenValidityIsNil: Boolean
  refreshTokenValidityNotNil: Boolean
  """logo field predicates"""
  logo: String
  logoNEQ: String
  logoIn: [String!]
  logoNotIn: [String!]
  logoGT: String
  logoGTE: String
  logoLT: String
  logoLTE: String
  logoContains: String
  logoHasPrefix: String
  logoHasSuffix: String
  logoIsNil: Boolean
  logoNotNil: Boolean
  logoEqualFold: String
  logoContainsFold: String
  """comments field predicates"""
  comments: String
  commentsNEQ: String
  commentsIn: [String!]
  commentsNotIn: [String!]
  commentsGT: String
  commentsGTE: String
  commentsLT: String
  commentsLTE: String
  commentsContains: String
  commentsHasPrefix: String
  commentsHasSuffix: String
  commentsIsNil: Boolean
  commentsNotNil: Boolean
  commentsEqualFold: String
  commentsContainsFold: String
  """status field predicates"""
  status: AppStatus
  statusNEQ: AppStatus
  statusIn: [AppStatus!]
  statusNotIn: [AppStatus!]
  statusIsNil: Boolean
  statusNotNil: Boolean
  """menus edge predicates"""
  hasMenus: Boolean
  hasMenusWith: [AppMenuWhereInput!]
  """permissions edge predicates"""
  hasPermissions: Boolean
  hasPermissionsWith: [AppPermissionWhereInput!]
}
"""
CreateAppInput is used for create App object.
Input was generated by ent.
"""
input CreateAppInput {
  """应用名称"""
  name: String
  """应用类型"""
  kind: AppKind!
  """回调地址"""
  redirectURI: String
  """应用ID"""
  appKey: String
  """应用密钥"""
  appSecret: String
  """权限范围"""
  scopes: String
  """token有效期"""
  tokenValidity: Int
  """refresh_token有效期"""
  refreshTokenValidity: Int
  """图标"""
  logo: String
  """备注"""
  comments: String
  """状态"""
  status: AppStatus
  menuIDs: [ID!]
  permissionIDs: [ID!]
}
"""
CreateOrganizationInput is used for create Organization object.
Input was generated by ent.
"""
input CreateOrganizationInput {
  """默认域名"""
  domain: String
  """组织名称"""
  name: String!
  """简介"""
  profile: String
  """状态"""
  status: OrganizationStatus
  """国家或地区2字码"""
  countryCode: String
  """时区"""
  timezone: String
  parentID: ID!
  ownerID: ID
}
"""
CreateUserIdentityInput is used for create UserIdentity object.
Input was generated by ent.
"""
input CreateUserIdentityInput {
  """身份标识类型 手机、邮箱、用户名、微信、qq"""
  kind: UserIdentityKind!
  """用户名、邮箱、手机、unionid、qq"""
  code: String
  """扩展标识码,比如微信的openID"""
  codeExtend: String
  """状态,部分登陆方式需要验证通过才可启用"""
  status: UserIdentityStatus
  userID: ID
}
"""
CreateUserInput is used for create User object.
Input was generated by ent.
"""
input CreateUserInput {
  """登陆名称"""
  principalName: String!
  """显示名"""
  displayName: String!
  """状态"""
  status: UserStatus
  """备注"""
  comments: String
  identityIDs: [ID!]
  loginProfileID: ID
  passwordIDs: [ID!]
  deviceIDs: [ID!]
}
"""
CreateUserLoginProfileInput is used for create UserLoginProfile object.
Input was generated by ent.
"""
input CreateUserLoginProfileInput {
  """是否允许使用密码登陆控制台"""
  canLogin: Boolean
  """设置密码方式"""
  setKind: UserLoginProfileSetKind!
  """下次登陆时需要重置密码"""
  passwordReset: Boolean
  """是否开启设备认证"""
  verifyDevice: Boolean!
  """是否开启多因素验证"""
  mfaEnabled: Boolean
  """多因素验证密钥"""
  mfaSecret: String
  """多因素验证状态"""
  mfaStatus: UserLoginProfileMfaStatus
  userID: ID
}
"""
CreateUserPasswordInput is used for create UserPassword object.
Input was generated by ent.
"""
input CreateUserPasswordInput {
  """场景: login 普通登陆"""
  scene: UserPasswordScene
  """密码"""
  password: String
  status: UserPasswordStatus
  memo: String
  userID: ID
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "github.com/woocoos/adminx/ent.Noder") {
  """The id of the object."""
  id: ID!
}
"""Possible directions in which to order a list of items when provided an `orderBy` argument."""
enum OrderDirection {
  """Specifies an ascending order for a given `orderBy` argument."""
  ASC
  """Specifies a descending order for a given `orderBy` argument."""
  DESC
}
type Organization implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  deletedAt: Time
  """管理账户ID"""
  ownerID: ID
  """父级ID,0为根组织."""
  parentID: ID!
  """默认域名"""
  domain: String
  """系统代码"""
  code: String
  """组织名称"""
  name: String!
  """简介"""
  profile: String
  """状态"""
  status: OrganizationStatus
  """路径编码"""
  path: String
  displaySort: Int
  """国家或地区2字码"""
  countryCode: String
  """时区"""
  timezone: String
  parent: Organization!
  children: [Organization!]
}
"""A connection to a list of items."""
type OrganizationConnection {
  """A list of edges."""
  edges: [OrganizationEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""An edge in a connection."""
type OrganizationEdge {
  """The item at the end of the edge."""
  node: Organization
  """A cursor for use in pagination."""
  cursor: Cursor!
}
"""Ordering options for Organization connections"""
input OrganizationOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Organizations."""
  field: OrganizationOrderField!
}
"""Properties by which Organization connections can be ordered."""
enum OrganizationOrderField {
  createdAt
}
"""OrganizationStatus is enum for the field status"""
enum OrganizationStatus @goModel(model: "github.com/woocoos/adminx/ent/organization.Status") {
  active
  inactive
}
"""Ordering options for OrganizationUser connections"""
input OrganizationUserOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order OrganizationUsers."""
  field: OrganizationUserOrderField!
}
"""Properties by which OrganizationUser connections can be ordered."""
enum OrganizationUserOrderField {
  createdAt
}
"""
OrganizationUserWhereInput is used for filtering OrganizationUser objects.
Input was generated by ent.
"""
input OrganizationUserWhereInput {
  not: OrganizationUserWhereInput
  and: [OrganizationUserWhereInput!]
  or: [OrganizationUserWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameEqualFold: String
  displayNameContainsFold: String
}
"""
OrganizationWhereInput is used for filtering Organization objects.
Input was generated by ent.
"""
input OrganizationWhereInput {
  not: OrganizationWhereInput
  and: [OrganizationWhereInput!]
  or: [OrganizationWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """deleted_at field predicates"""
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """owner_id field predicates"""
  ownerID: ID
  ownerIDNEQ: ID
  ownerIDIn: [ID!]
  ownerIDNotIn: [ID!]
  ownerIDIsNil: Boolean
  ownerIDNotNil: Boolean
  """parent_id field predicates"""
  parentID: ID
  parentIDNEQ: ID
  parentIDIn: [ID!]
  parentIDNotIn: [ID!]
  """domain field predicates"""
  domain: String
  domainNEQ: String
  domainIn: [String!]
  domainNotIn: [String!]
  domainGT: String
  domainGTE: String
  domainLT: String
  domainLTE: String
  domainContains: String
  domainHasPrefix: String
  domainHasSuffix: String
  domainIsNil: Boolean
  domainNotNil: Boolean
  domainEqualFold: String
  domainContainsFold: String
  """code field predicates"""
  code: String
  codeNEQ: String
  codeIn: [String!]
  codeNotIn: [String!]
  codeGT: String
  codeGTE: String
  codeLT: String
  codeLTE: String
  codeContains: String
  codeHasPrefix: String
  codeHasSuffix: String
  codeIsNil: Boolean
  codeNotNil: Boolean
  codeEqualFold: String
  codeContainsFold: String
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """status field predicates"""
  status: OrganizationStatus
  statusNEQ: OrganizationStatus
  statusIn: [OrganizationStatus!]
  statusNotIn: [OrganizationStatus!]
  statusIsNil: Boolean
  statusNotNil: Boolean
  """path field predicates"""
  path: String
  pathNEQ: String
  pathIn: [String!]
  pathNotIn: [String!]
  pathGT: String
  pathGTE: String
  pathLT: String
  pathLTE: String
  pathContains: String
  pathHasPrefix: String
  pathHasSuffix: String
  pathIsNil: Boolean
  pathNotNil: Boolean
  pathEqualFold: String
  pathContainsFold: String
  """country_code field predicates"""
  countryCode: String
  countryCodeNEQ: String
  countryCodeIn: [String!]
  countryCodeNotIn: [String!]
  countryCodeGT: String
  countryCodeGTE: String
  countryCodeLT: String
  countryCodeLTE: String
  countryCodeContains: String
  countryCodeHasPrefix: String
  countryCodeHasSuffix: String
  countryCodeIsNil: Boolean
  countryCodeNotNil: Boolean
  countryCodeEqualFold: String
  countryCodeContainsFold: String
  """timezone field predicates"""
  timezone: String
  timezoneNEQ: String
  timezoneIn: [String!]
  timezoneNotIn: [String!]
  timezoneGT: String
  timezoneGTE: String
  timezoneLT: String
  timezoneLTE: String
  timezoneContains: String
  timezoneHasPrefix: String
  timezoneHasSuffix: String
  timezoneIsNil: Boolean
  timezoneNotNil: Boolean
  timezoneEqualFold: String
  timezoneContainsFold: String
  """parent edge predicates"""
  hasParent: Boolean
  hasParentWith: [OrganizationWhereInput!]
  """children edge predicates"""
  hasChildren: Boolean
  hasChildrenWith: [OrganizationWhereInput!]
  """owner edge predicates"""
  hasOwner: Boolean
  hasOwnerWith: [UserWhereInput!]
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """When paginating backwards, the cursor to continue."""
  startCursor: Cursor
  """When paginating forwards, the cursor to continue."""
  endCursor: Cursor
}
type Query {
  """Fetches an object given its ID."""
  node(
    """ID of the object."""
    id: GID!
  ): Node
  """Lookup nodes by a list of IDs."""
  nodes(
    """The list of node IDs."""
    ids: [GID!]!
  ): [Node]!
  apps(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for Apps returned from the connection."""
    orderBy: AppOrder

    """Filtering options for Apps returned from the connection."""
    where: AppWhereInput
  ): AppConnection!
  organizations(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for Organizations returned from the connection."""
    orderBy: OrganizationOrder

    """Filtering options for Organizations returned from the connection."""
    where: OrganizationWhereInput
  ): OrganizationConnection!
  users(
    """Returns the elements in the list that come after the specified cursor."""
    after: Cursor

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the elements in the list that come before the specified cursor."""
    before: Cursor

    """Returns the last _n_ elements from the list."""
    last: Int

    """Ordering options for Users returned from the connection."""
    orderBy: UserOrder

    """Filtering options for Users returned from the connection."""
    where: UserWhereInput
  ): UserConnection!
}
"""The builtin Time type"""
scalar Time
"""
UpdateAppInput is used for update App object.
Input was generated by ent.
"""
input UpdateAppInput {
  """应用名称"""
  name: String
  clearName: Boolean
  """应用类型"""
  kind: AppKind
  """回调地址"""
  redirectURI: String
  clearRedirectURI: Boolean
  """应用ID"""
  appKey: String
  clearAppKey: Boolean
  """应用密钥"""
  appSecret: String
  clearAppSecret: Boolean
  """权限范围"""
  scopes: String
  clearScopes: Boolean
  """token有效期"""
  tokenValidity: Int
  clearTokenValidity: Boolean
  """refresh_token有效期"""
  refreshTokenValidity: Int
  clearRefreshTokenValidity: Boolean
  """图标"""
  logo: String
  clearLogo: Boolean
  """备注"""
  comments: String
  clearComments: Boolean
  """状态"""
  status: AppStatus
  clearStatus: Boolean
  addMenuIDs: [ID!]
  removeMenuIDs: [ID!]
  clearMenus: Boolean
  addPermissionIDs: [ID!]
  removePermissionIDs: [ID!]
  clearPermissions: Boolean
}
"""
UpdateOrganizationInput is used for update Organization object.
Input was generated by ent.
"""
input UpdateOrganizationInput {
  """默认域名"""
  domain: String
  clearDomain: Boolean
  """组织名称"""
  name: String
  """简介"""
  profile: String
  clearProfile: Boolean
  """状态"""
  status: OrganizationStatus
  clearStatus: Boolean
  """国家或地区2字码"""
  countryCode: String
  clearCountryCode: Boolean
  """时区"""
  timezone: String
  clearTimezone: Boolean
  parentID: ID
  clearParent: Boolean
  ownerID: ID
  clearOwner: Boolean
}
"""
UpdateUserIdentityInput is used for update UserIdentity object.
Input was generated by ent.
"""
input UpdateUserIdentityInput {
  """身份标识类型 手机、邮箱、用户名、微信、qq"""
  kind: UserIdentityKind
  """用户名、邮箱、手机、unionid、qq"""
  code: String
  clearCode: Boolean
  """扩展标识码,比如微信的openID"""
  codeExtend: String
  clearCodeExtend: Boolean
  """状态,部分登陆方式需要验证通过才可启用"""
  status: UserIdentityStatus
  clearStatus: Boolean
}
"""
UpdateUserInput is used for update User object.
Input was generated by ent.
"""
input UpdateUserInput {
  """登陆名称"""
  principalName: String
  """显示名"""
  displayName: String
  """备注"""
  comments: String
  clearComments: Boolean
  addIdentityIDs: [ID!]
  removeIdentityIDs: [ID!]
  clearIdentities: Boolean
  loginProfileID: ID
  clearLoginProfile: Boolean
  addPasswordIDs: [ID!]
  removePasswordIDs: [ID!]
  clearPasswords: Boolean
  addDeviceIDs: [ID!]
  removeDeviceIDs: [ID!]
  clearDevices: Boolean
}
"""
UpdateUserLoginProfileInput is used for update UserLoginProfile object.
Input was generated by ent.
"""
input UpdateUserLoginProfileInput {
  """是否允许使用密码登陆控制台"""
  canLogin: Boolean
  clearCanLogin: Boolean
  """设置密码方式"""
  setKind: UserLoginProfileSetKind
  """下次登陆时需要重置密码"""
  passwordReset: Boolean
  clearPasswordReset: Boolean
  """是否开启设备认证"""
  verifyDevice: Boolean
  """是否开启多因素验证"""
  mfaEnabled: Boolean
  clearMfaEnabled: Boolean
  """多因素验证密钥"""
  mfaSecret: String
  clearMfaSecret: Boolean
  """多因素验证状态"""
  mfaStatus: UserLoginProfileMfaStatus
  clearMfaStatus: Boolean
}
"""
UpdateUserPasswordInput is used for update UserPassword object.
Input was generated by ent.
"""
input UpdateUserPasswordInput {
  """场景: login 普通登陆"""
  scene: UserPasswordScene
  clearScene: Boolean
  """密码"""
  password: String
  clearPassword: Boolean
  status: UserPasswordStatus
  clearStatus: Boolean
  memo: String
  clearMemo: Boolean
}
type User implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  deletedAt: Time
  """登陆名称"""
  principalName: String!
  """显示名"""
  displayName: String!
  """用户类型"""
  userType: UserUserType!
  """创建类型,邀请，注册,手工创建"""
  creationType: UserCreationType!
  """注册时IP"""
  registerIP: String!
  """状态"""
  status: UserStatus
  """备注"""
  comments: String
  identities: [UserIdentity!]
  loginProfile: UserLoginProfile
  passwords: [UserPassword!]
  devices: [UserDevice!]
}
"""A connection to a list of items."""
type UserConnection {
  """A list of edges."""
  edges: [UserEdge]
  """Information to aid in pagination."""
  pageInfo: PageInfo!
  """Identifies the total count of items in the connection."""
  totalCount: Int!
}
"""UserCreationType is enum for the field creation_type"""
enum UserCreationType @goModel(model: "github.com/woocoos/adminx/ent/user.CreationType") {
  invitation
  register
  manual
}
type UserDevice implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  userID: ID
  """设备唯一ID"""
  deviceUID: String!
  deviceName: String
  systemName: String
  systemVersion: String
  appVersion: String
  deviceModel: String
  """状态,可用或不可用及其他待确认状态"""
  status: UserDeviceStatus
  """备注"""
  comments: String
  user: User
}
"""Ordering options for UserDevice connections"""
input UserDeviceOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order UserDevices."""
  field: UserDeviceOrderField!
}
"""Properties by which UserDevice connections can be ordered."""
enum UserDeviceOrderField {
  createdAt
}
"""UserDeviceStatus is enum for the field status"""
enum UserDeviceStatus @goModel(model: "github.com/woocoos/adminx/ent/userdevice.Status") {
  active
  inactive
}
"""
UserDeviceWhereInput is used for filtering UserDevice objects.
Input was generated by ent.
"""
input UserDeviceWhereInput {
  not: UserDeviceWhereInput
  and: [UserDeviceWhereInput!]
  or: [UserDeviceWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """user_id field predicates"""
  userID: ID
  userIDNEQ: ID
  userIDIn: [ID!]
  userIDNotIn: [ID!]
  userIDIsNil: Boolean
  userIDNotNil: Boolean
  """device_uid field predicates"""
  deviceUID: String
  deviceUIDNEQ: String
  deviceUIDIn: [String!]
  deviceUIDNotIn: [String!]
  deviceUIDGT: String
  deviceUIDGTE: String
  deviceUIDLT: String
  deviceUIDLTE: String
  deviceUIDContains: String
  deviceUIDHasPrefix: String
  deviceUIDHasSuffix: String
  deviceUIDEqualFold: String
  deviceUIDContainsFold: String
  """device_name field predicates"""
  deviceName: String
  deviceNameNEQ: String
  deviceNameIn: [String!]
  deviceNameNotIn: [String!]
  deviceNameGT: String
  deviceNameGTE: String
  deviceNameLT: String
  deviceNameLTE: String
  deviceNameContains: String
  deviceNameHasPrefix: String
  deviceNameHasSuffix: String
  deviceNameIsNil: Boolean
  deviceNameNotNil: Boolean
  deviceNameEqualFold: String
  deviceNameContainsFold: String
  """system_name field predicates"""
  systemName: String
  systemNameNEQ: String
  systemNameIn: [String!]
  systemNameNotIn: [String!]
  systemNameGT: String
  systemNameGTE: String
  systemNameLT: String
  systemNameLTE: String
  systemNameContains: String
  systemNameHasPrefix: String
  systemNameHasSuffix: String
  systemNameIsNil: Boolean
  systemNameNotNil: Boolean
  systemNameEqualFold: String
  systemNameContainsFold: String
  """system_version field predicates"""
  systemVersion: String
  systemVersionNEQ: String
  systemVersionIn: [String!]
  systemVersionNotIn: [String!]
  systemVersionGT: String
  systemVersionGTE: String
  systemVersionLT: String
  systemVersionLTE: String
  systemVersionContains: String
  systemVersionHasPrefix: String
  systemVersionHasSuffix: String
  systemVersionIsNil: Boolean
  systemVersionNotNil: Boolean
  systemVersionEqualFold: String
  systemVersionContainsFold: String
  """app_version field predicates"""
  appVersion: String
  appVersionNEQ: String
  appVersionIn: [String!]
  appVersionNotIn: [String!]
  appVersionGT: String
  appVersionGTE: String
  appVersionLT: String
  appVersionLTE: String
  appVersionContains: String
  appVersionHasPrefix: String
  appVersionHasSuffix: String
  appVersionIsNil: Boolean
  appVersionNotNil: Boolean
  appVersionEqualFold: String
  appVersionContainsFold: String
  """device_model field predicates"""
  deviceModel: String
  deviceModelNEQ: String
  deviceModelIn: [String!]
  deviceModelNotIn: [String!]
  deviceModelGT: String
  deviceModelGTE: String
  deviceModelLT: String
  deviceModelLTE: String
  deviceModelContains: String
  deviceModelHasPrefix: String
  deviceModelHasSuffix: String
  deviceModelIsNil: Boolean
  deviceModelNotNil: Boolean
  deviceModelEqualFold: String
  deviceModelContainsFold: String
  """status field predicates"""
  status: UserDeviceStatus
  statusNEQ: UserDeviceStatus
  statusIn: [UserDeviceStatus!]
  statusNotIn: [UserDeviceStatus!]
  statusIsNil: Boolean
  statusNotNil: Boolean
  """user edge predicates"""
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
}
"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User
  """A cursor for use in pagination."""
  cursor: Cursor!
}
type UserIdentity implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  userID: ID
  """身份标识类型 手机、邮箱、用户名、微信、qq"""
  kind: UserIdentityKind!
  """用户名、邮箱、手机、unionid、qq"""
  code: String
  """扩展标识码,比如微信的openID"""
  codeExtend: String
  """状态,部分登陆方式需要验证通过才可启用"""
  status: UserIdentityStatus
  user: User
}
"""UserIdentityKind is enum for the field kind"""
enum UserIdentityKind @goModel(model: "github.com/woocoos/adminx/ent/useridentity.Kind") {
  name
  email
  phone
  wechat
  qq
}
"""Ordering options for UserIdentity connections"""
input UserIdentityOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order UserIdentities."""
  field: UserIdentityOrderField!
}
"""Properties by which UserIdentity connections can be ordered."""
enum UserIdentityOrderField {
  createdAt
}
"""UserIdentityStatus is enum for the field status"""
enum UserIdentityStatus @goModel(model: "github.com/woocoos/adminx/ent/useridentity.Status") {
  verify
  active
  inactive
}
"""
UserIdentityWhereInput is used for filtering UserIdentity objects.
Input was generated by ent.
"""
input UserIdentityWhereInput {
  not: UserIdentityWhereInput
  and: [UserIdentityWhereInput!]
  or: [UserIdentityWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """user_id field predicates"""
  userID: ID
  userIDNEQ: ID
  userIDIn: [ID!]
  userIDNotIn: [ID!]
  userIDIsNil: Boolean
  userIDNotNil: Boolean
  """kind field predicates"""
  kind: UserIdentityKind
  kindNEQ: UserIdentityKind
  kindIn: [UserIdentityKind!]
  kindNotIn: [UserIdentityKind!]
  """code field predicates"""
  code: String
  codeNEQ: String
  codeIn: [String!]
  codeNotIn: [String!]
  codeGT: String
  codeGTE: String
  codeLT: String
  codeLTE: String
  codeContains: String
  codeHasPrefix: String
  codeHasSuffix: String
  codeIsNil: Boolean
  codeNotNil: Boolean
  codeEqualFold: String
  codeContainsFold: String
  """code_extend field predicates"""
  codeExtend: String
  codeExtendNEQ: String
  codeExtendIn: [String!]
  codeExtendNotIn: [String!]
  codeExtendGT: String
  codeExtendGTE: String
  codeExtendLT: String
  codeExtendLTE: String
  codeExtendContains: String
  codeExtendHasPrefix: String
  codeExtendHasSuffix: String
  codeExtendIsNil: Boolean
  codeExtendNotNil: Boolean
  codeExtendEqualFold: String
  codeExtendContainsFold: String
  """status field predicates"""
  status: UserIdentityStatus
  statusNEQ: UserIdentityStatus
  statusIn: [UserIdentityStatus!]
  statusNotIn: [UserIdentityStatus!]
  statusIsNil: Boolean
  statusNotNil: Boolean
  """user edge predicates"""
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
}
type UserLoginProfile implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  userID: ID
  lastLoginIP: String
  """最后登陆时间"""
  lastLoginAt: Time
  """是否允许使用密码登陆控制台"""
  canLogin: Boolean
  """设置密码方式"""
  setKind: UserLoginProfileSetKind!
  """下次登陆时需要重置密码"""
  passwordReset: Boolean
  """是否开启设备认证"""
  verifyDevice: Boolean!
  """是否开启多因素验证"""
  mfaEnabled: Boolean
  """多因素验证状态"""
  mfaStatus: UserLoginProfileMfaStatus
  user: User
}
"""UserLoginProfileMfaStatus is enum for the field mfa_status"""
enum UserLoginProfileMfaStatus @goModel(model: "github.com/woocoos/adminx/ent/userloginprofile.MfaStatus") {
  enable
  inactive
}
"""Ordering options for UserLoginProfile connections"""
input UserLoginProfileOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order UserLoginProfiles."""
  field: UserLoginProfileOrderField!
}
"""Properties by which UserLoginProfile connections can be ordered."""
enum UserLoginProfileOrderField {
  createdAt
}
"""UserLoginProfileSetKind is enum for the field set_kind"""
enum UserLoginProfileSetKind @goModel(model: "github.com/woocoos/adminx/ent/userloginprofile.SetKind") {
  keep
  customer
  auto
}
"""
UserLoginProfileWhereInput is used for filtering UserLoginProfile objects.
Input was generated by ent.
"""
input UserLoginProfileWhereInput {
  not: UserLoginProfileWhereInput
  and: [UserLoginProfileWhereInput!]
  or: [UserLoginProfileWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """user_id field predicates"""
  userID: ID
  userIDNEQ: ID
  userIDIn: [ID!]
  userIDNotIn: [ID!]
  userIDIsNil: Boolean
  userIDNotNil: Boolean
  """can_login field predicates"""
  canLogin: Boolean
  canLoginNEQ: Boolean
  canLoginIsNil: Boolean
  canLoginNotNil: Boolean
  """set_kind field predicates"""
  setKind: UserLoginProfileSetKind
  setKindNEQ: UserLoginProfileSetKind
  setKindIn: [UserLoginProfileSetKind!]
  setKindNotIn: [UserLoginProfileSetKind!]
  """password_reset field predicates"""
  passwordReset: Boolean
  passwordResetNEQ: Boolean
  passwordResetIsNil: Boolean
  passwordResetNotNil: Boolean
  """verify_device field predicates"""
  verifyDevice: Boolean
  verifyDeviceNEQ: Boolean
  """mfa_enabled field predicates"""
  mfaEnabled: Boolean
  mfaEnabledNEQ: Boolean
  mfaEnabledIsNil: Boolean
  mfaEnabledNotNil: Boolean
  """mfa_status field predicates"""
  mfaStatus: UserLoginProfileMfaStatus
  mfaStatusNEQ: UserLoginProfileMfaStatus
  mfaStatusIn: [UserLoginProfileMfaStatus!]
  mfaStatusNotIn: [UserLoginProfileMfaStatus!]
  mfaStatusIsNil: Boolean
  mfaStatusNotNil: Boolean
  """user edge predicates"""
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
}
"""Ordering options for User connections"""
input UserOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order Users."""
  field: UserOrderField!
}
"""Properties by which User connections can be ordered."""
enum UserOrderField {
  createdAt
}
type UserPassword implements Node {
  id: ID!
  createdBy: Int!
  createdAt: Time!
  updatedBy: Int
  updatedAt: Time
  userID: ID
  """场景: login 普通登陆"""
  scene: UserPasswordScene
  status: UserPasswordStatus
  memo: String
  user: User
}
"""Ordering options for UserPassword connections"""
input UserPasswordOrder {
  """The ordering direction."""
  direction: OrderDirection! = ASC
  """The field by which to order UserPasswords."""
  field: UserPasswordOrderField!
}
"""Properties by which UserPassword connections can be ordered."""
enum UserPasswordOrderField {
  createdAt
}
"""UserPasswordScene is enum for the field scene"""
enum UserPasswordScene @goModel(model: "github.com/woocoos/adminx/ent/userpassword.Scene") {
  login
}
"""UserPasswordStatus is enum for the field status"""
enum UserPasswordStatus @goModel(model: "github.com/woocoos/adminx/ent/userpassword.Status") {
  inactive
}
"""
UserPasswordWhereInput is used for filtering UserPassword objects.
Input was generated by ent.
"""
input UserPasswordWhereInput {
  not: UserPasswordWhereInput
  and: [UserPasswordWhereInput!]
  or: [UserPasswordWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """user_id field predicates"""
  userID: ID
  userIDNEQ: ID
  userIDIn: [ID!]
  userIDNotIn: [ID!]
  userIDIsNil: Boolean
  userIDNotNil: Boolean
  """scene field predicates"""
  scene: UserPasswordScene
  sceneNEQ: UserPasswordScene
  sceneIn: [UserPasswordScene!]
  sceneNotIn: [UserPasswordScene!]
  sceneIsNil: Boolean
  sceneNotNil: Boolean
  """status field predicates"""
  status: UserPasswordStatus
  statusNEQ: UserPasswordStatus
  statusIn: [UserPasswordStatus!]
  statusNotIn: [UserPasswordStatus!]
  statusIsNil: Boolean
  statusNotNil: Boolean
  """user edge predicates"""
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
}
"""UserStatus is enum for the field status"""
enum UserStatus @goModel(model: "github.com/woocoos/adminx/ent/user.Status") {
  processing
  active
  inactive
}
"""UserUserType is enum for the field user_type"""
enum UserUserType @goModel(model: "github.com/woocoos/adminx/ent/user.UserType") {
  account
  member
}
"""
UserWhereInput is used for filtering User objects.
Input was generated by ent.
"""
input UserWhereInput {
  not: UserWhereInput
  and: [UserWhereInput!]
  or: [UserWhereInput!]
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """created_by field predicates"""
  createdBy: Int
  createdByNEQ: Int
  createdByIn: [Int!]
  createdByNotIn: [Int!]
  createdByGT: Int
  createdByGTE: Int
  createdByLT: Int
  createdByLTE: Int
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """updated_by field predicates"""
  updatedBy: Int
  updatedByNEQ: Int
  updatedByIn: [Int!]
  updatedByNotIn: [Int!]
  updatedByGT: Int
  updatedByGTE: Int
  updatedByLT: Int
  updatedByLTE: Int
  updatedByIsNil: Boolean
  updatedByNotNil: Boolean
  """updated_at field predicates"""
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  updatedAtIsNil: Boolean
  updatedAtNotNil: Boolean
  """deleted_at field predicates"""
  deletedAt: Time
  deletedAtNEQ: Time
  deletedAtIn: [Time!]
  deletedAtNotIn: [Time!]
  deletedAtGT: Time
  deletedAtGTE: Time
  deletedAtLT: Time
  deletedAtLTE: Time
  deletedAtIsNil: Boolean
  deletedAtNotNil: Boolean
  """principal_name field predicates"""
  principalName: String
  principalNameNEQ: String
  principalNameIn: [String!]
  principalNameNotIn: [String!]
  principalNameGT: String
  principalNameGTE: String
  principalNameLT: String
  principalNameLTE: String
  principalNameContains: String
  principalNameHasPrefix: String
  principalNameHasSuffix: String
  principalNameEqualFold: String
  principalNameContainsFold: String
  """display_name field predicates"""
  displayName: String
  displayNameNEQ: String
  displayNameIn: [String!]
  displayNameNotIn: [String!]
  displayNameGT: String
  displayNameGTE: String
  displayNameLT: String
  displayNameLTE: String
  displayNameContains: String
  displayNameHasPrefix: String
  displayNameHasSuffix: String
  displayNameEqualFold: String
  displayNameContainsFold: String
  """creation_type field predicates"""
  creationType: UserCreationType
  creationTypeNEQ: UserCreationType
  creationTypeIn: [UserCreationType!]
  creationTypeNotIn: [UserCreationType!]
  """register_ip field predicates"""
  registerIP: String
  registerIPNEQ: String
  registerIPIn: [String!]
  registerIPNotIn: [String!]
  registerIPGT: String
  registerIPGTE: String
  registerIPLT: String
  registerIPLTE: String
  registerIPContains: String
  registerIPHasPrefix: String
  registerIPHasSuffix: String
  registerIPEqualFold: String
  registerIPContainsFold: String
  """status field predicates"""
  status: UserStatus
  statusNEQ: UserStatus
  statusIn: [UserStatus!]
  statusNotIn: [UserStatus!]
  statusIsNil: Boolean
  statusNotNil: Boolean
  """identities edge predicates"""
  hasIdentities: Boolean
  hasIdentitiesWith: [UserIdentityWhereInput!]
  """login_profile edge predicates"""
  hasLoginProfile: Boolean
  hasLoginProfileWith: [UserLoginProfileWhereInput!]
  """passwords edge predicates"""
  hasPasswords: Boolean
  hasPasswordsWith: [UserPasswordWhereInput!]
  """devices edge predicates"""
  hasDevices: Boolean
  hasDevicesWith: [UserDeviceWhereInput!]
}
